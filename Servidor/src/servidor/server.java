/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package servidor;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.Serializable;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author kaariina
 */
public class server extends javax.swing.JFrame {

    /**
     * Creates new form server
     */
    public server() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titulo.setFont(new java.awt.Font("Niagara Solid", 1, 36)); // NOI18N
        titulo.setForeground(new java.awt.Color(0, 255, 255));
        titulo.setText("PREBE-SECUENCIADOR");
        getContentPane().add(titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1095, 810, 630, 40));

        jLabel2.setFont(new java.awt.Font("Bauhaus 93", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 255, 255));
        jLabel2.setText("PREBE-SECUENCIADOR");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 660, 80));

        jLabel3.setBackground(new java.awt.Color(255, 255, 0));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/servidor/music.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 170, 80, 80));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/servidor/fondo.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 460));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception, UnknownHostException, IOException, ClassNotFoundException{
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new server().setVisible(true);
            }
        });
        
        
        
        
        ServerSocket paquete_recibir = new ServerSocket(9999);
        ServerSocket funcion_parar = new ServerSocket(9998);

        Secuenciador recibido;
        ArrayList<Boolean> lins1;
        ArrayList<Boolean> lins2;
        ArrayList<Boolean> lins3;
        ArrayList<Boolean> lins4;
        int bpms;
        int contador;
        Boolean loops = false;

        while (true) {

            Socket misocket = paquete_recibir.accept();
            ObjectInputStream paquete_recibido = new ObjectInputStream(misocket.getInputStream());
            recibido = (Secuenciador) paquete_recibido.readObject();

            bpms = recibido.bpm;
            loops = recibido.loop;
            contador = recibido.repeat;
            int j = 0;
            if (loops == true) {
                do {
                    for (int i = 0; i < 8; i++) {

                        Thread.sleep(bpms);

                        if (recibido.lin1.get(i) == true) {
                            Runnable t = new Reproducir("./dj1.wav");
                            Thread c1 = new Thread(t);
                            c1.start();
                        }

                        if (recibido.lin2.get(i) == true) {
                            Runnable t = new Reproducir("./dj2.wav");
                            Thread c1 = new Thread(t);
                            c1.start();
                        }

                        if (recibido.lin3.get(i) == true) {
                            Runnable t = new Reproducir("./dj3.wav");
                            Thread c1 = new Thread(t);
                            c1.start();
                        }

                        if (recibido.lin4.get(i) == true) {
                            Runnable t = new Reproducir("./dj4.wav");
                            Thread c1 = new Thread(t);
                            c1.start();
                        }

                    }

                } while (loops);

            } else {
                do {
                    for (int i = 0; i < 8; i++) {

                        Thread.sleep(bpms);

                        if (recibido.lin1.get(i) == true) {
                            Runnable t = new Reproducir("./dj1.wav");
                            Thread c1 = new Thread(t);
                            c1.start();
                        }

                        if (recibido.lin2.get(i) == true) {
                            Runnable t = new Reproducir("./dj2.wav");
                            Thread c1 = new Thread(t);
                            c1.start();
                        }

                        if (recibido.lin3.get(i) == true) {
                            Runnable t = new Reproducir("./dj3.wav");
                            Thread c1 = new Thread(t);
                            c1.start();
                        }

                        if (recibido.lin4.get(i) == true) {
                            Runnable t = new Reproducir("./dj4.wav");
                            Thread c1 = new Thread(t);
                            c1.start();
                        }

                    }

                    j++;
                } while (j < contador);
            }

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}
